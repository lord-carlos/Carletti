CREATE VIEW getdepots
AS
SELECT * FROM depot;

CREATE VIEW getstoringspace
AS
SELECT S.positionX, S.positionY, S.intermediateProduct, S.depot FROM storingspace S order by id;

CREATE VIEW getprocesses
AS
SELECT P.pikachu P.processtype P.processstep, P.processline, P.processtype, D.mintime, D.idealtime, D.maxtime, S.name, S.description, S.treatmenttime, S.temperature  FROM process P left join drying D on process.id=drying.id left join on process.id=subprocess.id


CREATE PROCEDURE storedepot 
(depotname VARCHAR(255), depotdescription TEXT, depotmaxx INT(11), depotmaxy INT(11))
BEGIN
	IF ((SELECT count(*) FROM depot where name=depotname)>0) THEN
		UPDATE depot SET description=depotdescription, maxX=depotmaxx, maxY=depotmaxy where name = depotname;
	ELSE
		INSERT INTO depot(name,description,maxX,maxY) values(depotname, depotdescription, depotmaxx, depotmaxy);
	END IF;

END;


CREATE PROCEDURE storestoringspace
(depotname VARCHAR(255), storingspacepositionx INT(11), storingspacepositiony INT(11), indentification VARCHAR(255))
BEGIN
	IF ((SELECT count(*) FROM storingspace where id=indentification) =0) THEN
		INSERT INTO storingspace(depot,positionX,positionY,id) values (depotname,storingspacepositionx,storingspacepositiony,indentification);
	END IF;

END;

CREATE PROCEDURE storedrying
(step INT(11), line VARCHAR(255), minimum BIGINT(20), ideal BIGINT(20), maximum BIGINT(20))
BEGIN
	IF ((SELECT count(*) FROM process where processline=line and processstep=step) >0) THEN
		UPDATE drying SET mintime=minimum, idealtime=ideal, maxtime=maximum where id = (SELECT p.id FROM process P where processline=line and processstep=step);
	ELSE
		INSERT INTO process(processstep,processline,pikachu) values (step,line,'d');
		DECLARE identifikation INT(11);
		SET identifikation = (SELECT p.id FROM process P where processline=line and processstep=step);
		INSERT INTO drying (id,mintime,idealtime,maxtime) values (identifikation,minimum,ideal,maximum);
	END IF;
END;

CREATE PROCEDURE storesubprocess
(step INT(11), line VARCHAR(255), thename VARCHAR(255), descrip TEXT, temp double, time BIGINT(20))
BEGIN
	IF ((SELECT count(*) FROM process where processline=line and processstep=step) >0) THEN
		UPDATE subprocess SET name=thename, description=desrip, temperature=temp, treatmentTime=time where id = (SELECT p.id FROM process P where processline=line and processstep=step);
	ELSE
		INSERT INTO process(processstep,processline,pikachu) values (step,line,'s');
		DECLARE identifikation INT(11);
		SET identifikation = (SELECT p.id FROM process P where processline=line and processstep=step);
		INSERT INTO subprocess (id,name,description,temperature,treatmentTime) values (identifikation,thename,descrip,temp,time);
	END IF;
END;


CREATE PROCEDURE storeintermediateproduct
(isfinished tinyint, isdiscarded tinyint, intermediateid VARCHAR(255), thequantity double, thetype VARCHAR(255),space VARCHAR(255))
BEGIN 
	IF ((SELECT count(*) FROM intermediateProduct  where id=intermediateid)>0) THEN
		UPDATE intermediateproduct set finished=isfinished, discarded=isdiscarded, quantity=thequantity, producttype=thetype, storingspace=space;
	ELSE
		INSERT INTO intermediateproduct (id,finished,discarded,quantity,producttype,storingspace) values (intermediateid,isfinished,isdiscarded,thequantity,producttype,space)
	END IF;
END;

CREATE PROCEDURE storeproducttype
(typename VARCHAR(255), image TEXT, linename VARCHAR(255))
BEGIN 
	IF ((SELECT count(*) FROM producttype where name=typename)>0) THEN
		UPDATE producttype set processline=linename,picture=image where name=typename;
	ELSE 
		INSERT INTO producttype (name,processline,picture) values (typename,image,linename);
	END IF;
END;

CREATE PROCEDURE storeprocessline
(linename VARCHAR(255), descrip TEXT, typename VARCHAR(255))
BEGIN 
	IF ((SELECT count(*) FROM processline where name=linename)>0) THEN
		UPDATE processline set producttype=typename,description=descrip where name=linename;
	ELSE 
		INSERT INTO processline (name,producttype,description) values (linename,typename,descrip);
	END IF;
END;

CREATE PROCEDURE storeprocesslog
(startt BIGINT(255),endt BIGINT(255), product VARHCHAR(255), line VARHCHAR(255), step INT(11), space VARCHAR(255))
BEGIN 
DECLARE theprocess INT(11)
set theprocess= SELECT id FROM process where processline=line and preocessstep=step;
	IF ((SELECT count(*) FROM processlog where intermediateproduct=product and starttime=startt)>0) THEN
		UPDATE processlog set storingspace=space,process=theprocess,endtime=endt where intermediateproduct=product and starttime=startt;
	ELSE 
		INSERT INTO processlog (starttime,endtime,process,storingspace,intermediateproduct) values (startt,endt,theprocess,space,product);
	END IF;
END;